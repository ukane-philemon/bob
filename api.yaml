openapi: 3.1.0
info:
  title: Boss of Brevity
  version: 1.0.0
  summary: Meet BOB, the boss of brevity, the sultan of shortness, making your links famous for being short and sweet.
  description: This is the BOB API specification. It is used to generate the API documentation and to validate the API requests and responses. API request are rate limited to 1000 successful requests per minute. The API is secured using JWT tokens. To get a token, login to your account and use the token in the `Authorization` header of your requests. The token is valid for 24hours after which you must login again.
  contact:
    name: BOB
    url: https://github.com/ukane-philemon
    email: ukanephilemon@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://{host}:{port}
    description: Local development server
    variables:
      host:
        default: localhost
      port:
        default: "8080"
paths:
  /{shortUrl}:
    get:
      summary: Redirect to the original URL.
      description: Redirect to the original URL.
      operationId: redirect
      parameters:
        - name: shortUrl
          in: path
          description: Short URL without the domain name. e.g. `abc123`.
          required: true
          schema:
            type: string
      tags:
        - Links
      responses:
        "302":
          description: Redirect to the original URL
        "400":
          description: Invalid short URL
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
  /api/user:
    post:
      summary: Create a new user account.
      description: Create a new account with the given username, email and password.
      operationId: createAccount
      tags:
        - Accounts
      requestBody:
        description: User account to be created
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createAccount"
      responses:
        "200":
          description: Account created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "400":
          description: Invalid account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
    get:
      summary: Get the current user account.
      description: Get the current user account.
      operationId: getAccount
      tags:
        - Accounts
      parameters:
        - name: Authorization
          in: header
          description: Authorization token
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Account retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userInfo"
        "400":
          description: Invalid account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
  /api/login:
    post:
      summary: Login to an existing user account
      description: Login to an existing account with the given username and password.
      operationId: login
      tags:
        - Accounts
      requestBody:
        description: User account to be logged in
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/login"
      responses:
        "200":
          description: Account logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userInfo"
                properties:
                  authToken:
                    type: string
                    description: Authorization Token
        "400":
          description: Invalid account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
  /api/username-exists:
    get:
      summary: Check if a username exists
      description: Check if a username exists
      operationId: usernameExists
      parameters:
        - name: username
          in: query
          description: Username to be checked
          required: true
          schema:
            type: string
      tags:
        - Accounts
      responses:
        "200":
          description: Username exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
                properties:
                  exists:
                    type: boolean
                    description: True if the username exists, false otherwise.
        "400":
          description: Invalid account
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
  /api/url:
    post:
      summary: Create a new short link
      description: Create a new short link with the given URL.
      operationId: createLink
      tags:
        - Links
      requestBody:
        description: Link to be created
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createLink"
      responses:
        "200":
          description: Link created.
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/APIResponse"
                properties:
                  data: 
                    $ref: "#/components/schemas/shortURLInfo"
        "400":
          description: Invalid link
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
      security:
        - Authorization: []
    get:
      summary: Get all links
      description: Get all links created by the user. User must be logged in or provide an API key.
      operationId: getLinks
      tags:
        - Links
      responses:
        "200":
          description: Links found
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/APIResponse"
                properties:
                  data:
                    type: array
                    $ref: "#/components/schemas/shortURLInfo"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
      security:
        - Authorization: []
  /api/url/{shortUrl}:
    get:
      summary: Get a link
      description: Get the complete information for a short URL.
      operationId: getLink
      tags:
        - Links
      parameters:
        - name: shortUrl
          in: path
          description: Short URL to be retrieved without the domain name (e.g. "abc123").
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Link found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
                properties:
                 data:
                  $ref: "#/components/schemas/shortURLInfo"
        "404":
          description: Link not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
      security:
        - Authorization: []
  /api/url/{shortUrl}/qr:
    get:
      summary: Get a QR code for a link
      description: Get a QR code for a short link.
      operationId: getQRCode
      tags:
        - Links
      parameters:
        - name: shortUrl
          in: path
          description: Short URL to be retrieved without the domain. For example, if the short URL is https://example.com/abc123, the value of this parameter should be abc123.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: QR code generated successfully
          content:
            image/png:
              schema:
                type: string
                format: binary
        "400":
          description: Link not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIResponse"
      security:
        - Authorization: []
components:
  schemas:
    shortURLInfo:
      type: object
      properties:
        ownerID:
          type: string
          description: Link's owner ID
        shortUrl:
          type: string
          description: Short URL
        originalUrl:
          type: string
          description: Original URL
        clicks:
          type: integer
          description: Number of clicks on the link
        createdAt:
          type: string
          description: Link's creation date.
    createAccount:
      type: object
      properties:
        username:
          type: string
          description: Must be at least 3 characters long. The /api/username-exists endpoint can be used to check if a username exists.
        email:
          type: string
          description: Must be a valid email address.
        password:
         type: string
         format: byte
         description: Must be at least 8 characters long.
    createLink:
      type: object
      properties:
        url:
          type: string
          description: Must be a valid URL.
      required:
        - url
    login:
      type: object
      properties:
          email:
            type: string
            description: Must be a valid email address.
          password:
            type: string
            format: binary
            description: User password.
      required:
          - email
          - password
    APIResponse:
      type: object
      properties:
        ok:
          type: boolean
          description: True if the request was successful, false otherwise.
        code:
          type: integer
          description: The HTTP response code for this request.
        message:
          type: string
          description: Message describing the result of the request.  
    userInfo:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/APIResponse"
      properties:
        data:
          type: object
          properties:
            username:
              type: string
              description: User's username
            email:
              type: string
              description: User's email
            totalLinks:
              type: integer
              description: Total short URLs created by the user
            createdAt:
              type: string
              description: User's creation date
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: "JWT"